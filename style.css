@import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,100..800;1,100..800&display=swap');

:root {
    --ff:  "JetBrains Mono", monospace;
    --fs-title: clamp(1.5rem, 0.9718rem + 1.4085vw, 3rem);

    --fs-character: clamp(1rem, 1.1718rem + 1.4085vw, 2.3rem);
    --fs-number: clamp(2rem, 1.4718rem + 1.4085vw, 3.5rem);

    --clr-background: hsl(250, 17%, 7%);
    --clr-title: hsl(249, 8%, 35%);
    --clr-card: hsl(248, 10%, 15%);
    --clr-card-text: hsl(247, 10%, 82%);
    --clr-strength: hsl(248, 15%, 11%);
    --clr-accent: hsl(127, 100%, 82%);
    
}

body {
    font-family: var(--ff);
    display: flex;
    flex-direction: column;
    align-items: center; /* Aligns the h1 horizontally at the top */
    height: 100vh;
    background-color: var(--clr-background);
    color: var(--clr-card-text);
}

.wrapper {
    position: relative;
    width: 100%;
    height: 100%;
    padding: 4rem 1.5rem;
}

.title {
    text-align: center;
    font-size: var(--fs-title);
    padding: 2.5rem;
}

.container {
    display: flex;
    justify-content: center;
    align-items: center;
}

.card {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 2rem;
    width: clamp(35rem, 50vw, 60rem);
}

.password-generated, .choices-container {
    background-color: var(--clr-card);
}

.copy-image {
    width: 21px; /* Set the new size */
    height: auto;
    color: var(--clr-accent);
    cursor: pointer;
}

.password-generated {
    display: flex;
    padding: 2rem;
    align-items: center; /* Vertically center the text and image */
    justify-content: space-between; /* Push the img to the right */
    border-radius: 2px;
}

.password {
    color: var(--clr-password);
    font-size: 3rem;
    font-weight: bold;
}

.choices-container {
    padding: 2rem;
    border-radius: 2px;
}

p.character-length {
    font-size: var(--fs-character);
    padding-block: 1.5rem;
}

.character-number {
    font-size: var(--fs-number);
    color: var(--clr-accent);
}

.length {
    padding-bottom: 2rem;
}

.length-header {
    display: flex;
    align-content: center;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
}

.length-range {
    margin-block: 1rem;
    width: 100%;
    height: 8px;
    border-radius: 5px;
    outline: none;
    appearance: none;
    background: linear-gradient(to right, rgb(164, 255, 175) 0%, rgb(164, 255, 175) 50%, rgb(24, 23, 31) 50%, rgb(24, 23, 31) 100%);
    position: relative;
}

/* Thumb (dot) styling for WebKit browsers (Chrome, Safari, etc.) */
.length-range::-webkit-slider-thumb {
    appearance: none;
    width: 20px;
    height: 20px;
    background: white;
    border-radius: 50%;
    cursor: pointer;
    position: relative;
    z-index: 1;
}

/* Thumb (dot) styling for Firefox */
.length-range::-moz-range-thumb {
    width: 20px;
    height: 20px;
    background: white;
    border-radius: 50%;
    cursor: pointer;
}

/* Remove default appearance in IE */
.length-range::-ms-thumb {
    appearance: none;
}

/* Hover state styles */
.length-range.active::-webkit-slider-thumb {
    background: black; 
    border: 2px solid var(--clr-accent);
}

.checked {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    font-size: clamp(1.5rem, 1.3239rem + 0.4695vw, 2rem);
    padding-block: 1.5rem;
}

.checked-options {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding-bottom: 2rem;
}

/* Hide the default checkbox */
input[type="checkbox"] {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    width: 15px;
    height: 15px;
    border: 2px solid #ccc; /* Border for the custom checkbox */
    border-radius: 4px; /* Optional: make it slightly rounded */
    position: relative;
    cursor: pointer;
}

/* Change the color of the checkbox when it's checked */
input[type="checkbox"]:checked {
    background-color: var(--clr-accent); /* Custom color for checked state */
    border-color: var(--clr-accent); /* Optional: change border color when checked */
}

/* Add the black; /*heckmark when checked */
input[type="checkbox"]:checked::after {
    content: '';
    background: url('/images/icon-check.svg') no-repeat center;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-size: 12px 12px; /* Control the size of the SVG */
}

input[type="checkbox"]:hover {
    border: 2px solid var(--clr-accent); 
}

.strength-container {
    display: flex;
    background-color: var(--clr-strength);
    padding: 1.5rem;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;

}

.strength {
    font-size: 1.3rem;
    color: var(--clr-title);
    font-weight: bold;
}

.strength-output {
    display: flex;
    align-items: center;
    font-weight: bold;
}

.strength-output-txt {
    font-size: 1.5rem;
    margin-right: 1rem;
}

.strength-output-progress {
    display: flex;
    gap: .2rem;
}

.strength-output-field {
    width: 10px;
    height: 25px;
    border: 2px solid var(--clr-title); /* Outline color */
    margin-left: 4px;
    background-color: transparent; /* Default transparent background */
}

.strength-output-field.filled {
    background-color: #ffc107;
}

.strength-output-field.filled.too-weak {
    background-color: #dc3545;
}

.strength-output-field.filled.weak {
    background-color: #e88616;
}

.strength-output-field.filled.medium {
    background-color:   #ffc107;
}

.strength-output-field.filled.strong {
    background-color:   #bff282;
}

.strength-output-field.filled.excellent {
    background-color: #51f704;
}


.button-container {
    background-color: var(--clr-accent);
    display: flex;
    justify-content: center;
    cursor: pointer;
    border: none;
}

.button-container:hover {
    background-color: transparent;
    border: 2px solid var(--clr-accent);
    
}

/* This will change the text color on hover */
.button-container:hover .button-text {
    color: var(--clr-accent); /* Change text color on hover */
}

.button-text {
    font-size: 1.7rem;
    font-weight: bold;
}


button {
    display: flex;
    padding: 1.5rem;
    gap: 1rem;
    align-items: center;
    border: none; /* Remove default button border */
    cursor: pointer; /* Cursor pointer for button */
}

.button-container:hover svg path {
    fill: var(--clr-accent); /* Change SVG fill color on hover */
}
